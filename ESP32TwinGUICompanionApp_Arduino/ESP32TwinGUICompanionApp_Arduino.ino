/*

  @techscapades 2023 https://github.com/techscapades

*/
const unsigned char dqd[] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x03, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x03, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0xa0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x5f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xbb, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b,
  0xb8, 0x00, 0x00, 0x00, 0x00, 0x03, 0x7f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xee, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xef, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x0d, 0xdf, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3b, 0xbf,
  0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xaf, 0xb8, 0x00, 0x00, 0x00,
  0x00, 0x7f, 0x67, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf9, 0xf8,
  0x00, 0x00, 0x00, 0x00, 0xee, 0x86, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x3e, 0xa0, 0xe8, 0x00, 0x00, 0x00, 0x01, 0xfd, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x7f, 0xe1, 0xf8, 0x00, 0x00, 0x00, 0x02, 0xfa, 0x07, 0xa0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfa, 0x81, 0xb8, 0x00, 0x00, 0x00, 0x05, 0xfc, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x0a,
  0xf8, 0x06, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xee, 0x00, 0xe8, 0x00,
  0x00, 0x00, 0x37, 0xf0, 0x05, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xfc,
  0x01, 0xf8, 0x00, 0x00, 0x00, 0x2a, 0xe0, 0x07, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0b, 0xb8, 0x01, 0xb8, 0x00, 0x00, 0x00, 0x7f, 0x80, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x6f, 0x80, 0x06, 0xa0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xe0, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x7e, 0x00,
  0x05, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00,
  0x00, 0x3a, 0x00, 0x07, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x01,
  0xb8, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x06, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x05, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x07,
  0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x01, 0xb8, 0x00, 0x00, 0x00,
  0x7f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8,
  0x00, 0x00, 0x00, 0x6e, 0x00, 0x06, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e,
  0x80, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x05, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x07, 0xa0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x01, 0xb8, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x07, 0xe0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x6e,
  0x00, 0x06, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0xe8, 0x00,
  0x00, 0x00, 0x7e, 0x00, 0x05, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0,
  0x01, 0xf8, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x07, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x0b, 0x80, 0x01, 0xb8, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x06, 0xa0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x7e, 0x00,
  0x05, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00,
  0x00, 0x3a, 0x00, 0x07, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x01,
  0xb8, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x06, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0e, 0x80, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x05, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x07,
  0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x80, 0x01, 0xb8, 0x00, 0x00, 0x00,
  0x7f, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8,
  0x00, 0x00, 0x00, 0x6e, 0x00, 0x06, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e,
  0x80, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x05, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x0b, 0xfa, 0x00, 0x07, 0xa0, 0x00, 0x02, 0xfe,
  0x80, 0x00, 0x00, 0x00, 0x02, 0xfb, 0x80, 0x01, 0xb8, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x07, 0xe0,
  0x00, 0x1f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0xea, 0xee,
  0x00, 0x06, 0xa0, 0x00, 0xee, 0xee, 0xe8, 0x00, 0x00, 0x00, 0x3e, 0xee, 0x80, 0x00, 0xe8, 0x00,
  0x07, 0x7f, 0xfe, 0x00, 0x05, 0xe0, 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0x01, 0xff, 0xff, 0xc0,
  0x01, 0xf8, 0x00, 0x0a, 0xfe, 0xaa, 0x00, 0x07, 0xa0, 0x0e, 0xfb, 0xab, 0xbb, 0x80, 0x00, 0x03,
  0xbb, 0xab, 0x80, 0x01, 0xb8, 0x00, 0x37, 0xff, 0xff, 0x00, 0x07, 0xe0, 0x1f, 0xff, 0xff, 0xff,
  0xe0, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x01, 0xf8, 0x00, 0x6e, 0xba, 0x8a, 0x00, 0x06, 0xa0, 0x3e,
  0xee, 0x8a, 0xee, 0xa0, 0x00, 0x0a, 0xee, 0x8a, 0x80, 0x00, 0xe8, 0x00, 0xdf, 0xe0, 0x00, 0x00,
  0x05, 0xe0, 0x7f, 0xf0, 0x00, 0x3f, 0xf8, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x01, 0xf8, 0x01, 0xbb,
  0x80, 0x00, 0x00, 0x07, 0xa0, 0xfa, 0x80, 0x00, 0x0e, 0xac, 0x00, 0x2b, 0xe0, 0x00, 0x00, 0x01,
  0xb8, 0x03, 0x7e, 0x00, 0x00, 0x00, 0x07, 0xe1, 0xff, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x7f, 0x80,
  0x00, 0x00, 0x01, 0xf8, 0x02, 0xec, 0x00, 0x00, 0x00, 0x06, 0xa3, 0xee, 0x00, 0x00, 0x00, 0xea,
  0x00, 0xaf, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x05, 0xd8, 0x00, 0x00, 0x00, 0x05, 0xe3, 0xfc, 0x00,
  0x00, 0x00, 0xff, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x0b, 0xa0, 0x00, 0x00, 0x00, 0x07,
  0xa3, 0xb8, 0x00, 0x00, 0x00, 0x2b, 0x83, 0xbc, 0x00, 0x00, 0x00, 0x01, 0xb8, 0x1f, 0xe0, 0x00,
  0x00, 0x00, 0x07, 0xe7, 0xf0, 0x00, 0x00, 0x00, 0x3f, 0x83, 0xf8, 0x00, 0x00, 0x00, 0x01, 0xf8,
  0x1e, 0xc0, 0x00, 0x00, 0x00, 0x06, 0xae, 0xe0, 0x00, 0x00, 0x00, 0x1e, 0xc2, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0xe8, 0x1f, 0xc0, 0x00, 0x00, 0x00, 0x05, 0xef, 0xc0, 0x00, 0x00, 0x00, 0x1f, 0xc7,
  0xf0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x2a, 0x80, 0x00, 0x00, 0x00, 0x07, 0xab, 0xc0, 0x00, 0x00,
  0x00, 0x0b, 0xaf, 0xa0, 0x00, 0x00, 0x00, 0x01, 0xb8, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff,
  0xc0, 0x00, 0x00, 0x00, 0x07, 0xef, 0xe0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x2f, 0x00, 0x00, 0x00,
  0x00, 0x06, 0xae, 0x80, 0x00, 0x00, 0x00, 0x0e, 0xea, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x5f,
  0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x00, 0x00, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00,
  0x01, 0xf8, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x07, 0xab, 0x80, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x80,
  0x00, 0x00, 0x00, 0x01, 0xb8, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00,
  0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x6a, 0x00, 0x00, 0x00, 0x00, 0x06, 0xaf, 0x80,
  0x00, 0x00, 0x00, 0x02, 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x5e, 0x00, 0x00, 0x00, 0x00,
  0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x01, 0xf8, 0xfa, 0x00,
  0x00, 0x00, 0x00, 0x07, 0xab, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfa, 0x80, 0x00, 0x00, 0x00, 0x01,
  0xb8, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0x80, 0x00,
  0x00, 0x00, 0x01, 0xf8, 0xea, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xaf, 0x00, 0x00, 0x00, 0x00, 0x02,
  0xfe, 0x80, 0x00, 0x00, 0x00, 0x01, 0xe8, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0x00, 0x00,
  0x00, 0x00, 0x03, 0xdf, 0x80, 0x00, 0x00, 0x00, 0x01, 0xf8, 0x7a, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0xbb, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfb, 0x80, 0x00, 0x00, 0x00, 0x01, 0xa8, 0x7f, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xf8,
  0x2e, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xee, 0x80, 0x00, 0x00, 0x00, 0x02, 0xfe, 0xc0, 0x00, 0x00,
  0x00, 0x02, 0xe8, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x5f, 0x80, 0x00, 0x00, 0x00, 0x03, 0xff,
  0xc0, 0x00, 0x00, 0x00, 0x03, 0xf0, 0x2b, 0x80, 0x00, 0x00, 0x00, 0x0b, 0xdb, 0x80, 0x00, 0x00,
  0x00, 0x02, 0xfb, 0xa0, 0x00, 0x00, 0x00, 0x02, 0xb0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x17, 0xdf,
  0xc0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x07, 0xf0, 0x3e, 0x80, 0x00, 0x00,
  0x00, 0x2e, 0x8a, 0xe0, 0x00, 0x00, 0x00, 0x02, 0xfe, 0xe0, 0x00, 0x00, 0x00, 0x0e, 0xe0, 0x17,
  0xc0, 0x00, 0x00, 0x00, 0x3f, 0x8f, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xf7, 0xf0, 0x00, 0x00, 0x00,
  0x0f, 0xe0, 0x0b, 0xa0, 0x00, 0x00, 0x00, 0x7f, 0x0f, 0xb0, 0x00, 0x00, 0x00, 0x02, 0xf2, 0xa8,
  0x00, 0x00, 0x00, 0x1b, 0xe0, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0xff, 0x07, 0xf8, 0x00, 0x00, 0x00,
  0x03, 0xf3, 0xfc, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x0e, 0xf8, 0x00, 0x00, 0x00, 0xaa, 0x02, 0xec,
  0x00, 0x00, 0x00, 0x02, 0xf9, 0xee, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x06, 0xfc, 0x00, 0x00, 0x03,
  0xf4, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x03, 0xf0, 0xff, 0x00, 0x00, 0x00, 0xff, 0x80, 0x02, 0xfa,
  0x00, 0x00, 0x0e, 0xa8, 0x00, 0xbb, 0x80, 0x00, 0x00, 0x02, 0xf0, 0xfb, 0x80, 0x00, 0x03, 0xbb,
  0x00, 0x01, 0xbf, 0x80, 0x00, 0x1f, 0xd8, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xf0, 0x7f, 0xe0,
  0x00, 0x07, 0xfe, 0x00, 0x00, 0xae, 0xe0, 0x00, 0xee, 0xa0, 0x00, 0x6e, 0xe8, 0x00, 0x00, 0x02,
  0xf8, 0x3e, 0xf8, 0x00, 0x0e, 0xec, 0x00, 0x00, 0x6f, 0xfc, 0x07, 0xff, 0x60, 0x00, 0x3f, 0xff,
  0x05, 0x80, 0x03, 0xf0, 0x1f, 0xff, 0xc1, 0xff, 0xf8, 0x00, 0x00, 0x3b, 0xeb, 0xfe, 0xfe, 0x80,
  0x00, 0x0b, 0xbb, 0xff, 0x80, 0x02, 0xf0, 0x0e, 0xbb, 0xff, 0xbb, 0xa0, 0x00, 0x00, 0x1d, 0xff,
  0xff, 0xff, 0x00, 0x00, 0x07, 0xff, 0xff, 0x00, 0x03, 0xf0, 0x03, 0xff, 0xff, 0xff, 0xc0, 0x00,
  0x00, 0x06, 0xae, 0xee, 0xee, 0x00, 0x00, 0x03, 0xae, 0xee, 0x80, 0x02, 0xf8, 0x00, 0xee, 0xee,
  0xeb, 0x80, 0x00, 0x00, 0x01, 0xdf, 0xfd, 0xf8, 0x00, 0x00, 0x00, 0xff, 0xff, 0x80, 0x03, 0xf0,
  0x00, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x3a, 0xab, 0xa0, 0x00, 0x00, 0x00, 0x3e, 0xba,
  0x80, 0x02, 0xf0, 0x00, 0x0f, 0xaa, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00,
  0x00, 0x01, 0xff, 0x00, 0x03, 0xf0, 0x00, 0x01, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x02, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x80, 0x02, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00,
  0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x2e, 0x80, 0x02, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x80, 0x02, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x03, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x02,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0x80, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3b, 0x80, 0x02, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x02, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xd0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b,
  0x80, 0x02, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3f, 0x00, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x02, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xd0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x80, 0x02, 0xf0, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00,
  0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x2e, 0x80, 0x02, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x03, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0x80, 0x02, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x03, 0xf0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x02,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0x80, 0x07, 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3b, 0x80, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x80, 0x2e, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x7f, 0xc0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b,
  0x80, 0xbf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3f, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0x86, 0xee, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x8f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b, 0xbb, 0xb8, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x7f,
  0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x2e, 0xee, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e, 0xe8, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x3b, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00
};


#include "SPI.h"
#include "Adafruit_GFX.h"
#include "Adafruit_GC9A01A.h"

#define TFT_DC  1
#define TFT_CS_1 2
#define TFT_CS_2 3

Adafruit_GC9A01A tft_1(TFT_CS_1, TFT_DC);
Adafruit_GC9A01A tft_2(TFT_CS_2, TFT_DC);

#include <ArduinoJson.h>
//this baud rate must be the same as with the python code
const int baud_rate = 115200;
const String device = "ESP32TwinGUI";
String prev_cpu_temp_val;
String prev_gpu_temp_val;

byte exit_serial_button = 5;

void setup() {
  Serial.begin(baud_rate);
  tft_1.begin();
  tft_2.begin();
  tft_1.fillScreen(GC9A01A_BLACK);
  tft_2.fillScreen(GC9A01A_BLACK);
  testFilledRoundRects();
  tft_1.drawBitmap(38, 54, dqd, 150, 150, 0xFFFF);
  tft_2.drawBitmap(38, 54, dqd, 150, 150, 0xFFFF);
  yield();

  pinMode(exit_serial_button, INPUT_PULLUP);


}

void loop() {
  read_serial();
}

void poll_exit_button() {
  //if this button is pressed, it'll exit the desktop app and reset the board
  if (digitalRead(exit_serial_button) == LOW) {
    unsigned long time_now = millis();
    while (millis() - time_now < 20000) {
      exit_serial();
      delay(10);
    }
  }
}

void read_serial() {
  /*
    This fucntion waits for the message
    to arrive from python
  */
  if (Serial.available()) {
    String jsonString = Serial.readStringUntil('\n');
    DynamicJsonDocument jsonDoc(256); // Adjust the size if needed
    DeserializationError error = deserializeJson(jsonDoc, jsonString);

    if (error) {
      //Serial.print("JSON parsing error: ");
      //Serial.println(error.c_str());
    } else {
      const char* on_message = jsonDoc["message"];
      if (on_message && strcmp(on_message, "on") == 0) {
        begin_serial();
      }
      respond_serial();

      String cpu_temp = jsonDoc["cpu_temp"].as<String>();
      String gpu_temp = jsonDoc["gpu_temp"].as<String>();
      String com_date = jsonDoc["date"].as<String>();
      String com_time = jsonDoc["time"].as<String>();
      String com_day = jsonDoc["day"].as<String>();

      if (com_date != "0") {

      }
      if (com_time != "0") {

      }
      if (com_day != "0") {

      }

      if (cpu_temp != "0") {
        // Serial.println(cpu_temp);
        int byte_val = 0;
        int int_val = cpu_temp.toInt();
        byte_val = map(int_val, 23, 103, 1, 5);
        show_cpu_temp_val(cpu_temp, byte_val);
      }
      if (gpu_temp != "0") {
        // Serial.println(gpu_temp);
        int byte_val = 0;
        int int_val = gpu_temp.toInt();
        byte_val = map(int_val, 23, 103, 1, 5);
        show_gpu_temp_val(gpu_temp, byte_val);
      }

    }
  }
}

void show_cpu_temp_val(String temp_val, int text_colour) {
  tft_1.setCursor(59, 36); tft_1.setTextColor(GC9A01A_WHITE);  tft_1.setTextSize(4);  tft_1.println("CPU-T");
  tft_1.setCursor(96, 184); tft_1.setTextColor(GC9A01A_WHITE);  tft_1.setTextSize(4);  tft_1.println("^C");
  tft_1.setCursor(40, 98); tft_1.setTextColor(GC9A01A_BLACK);  tft_1.setTextSize(7);  tft_1.println(prev_cpu_temp_val);
  delay(10);
  tft_1.setCursor(40, 98); tft_1.setTextSize(7);
  switch (text_colour) {
    case 1:
      tft_1.setTextColor(GC9A01A_GREEN);
      tft_1.drawCircle(120, 120, 119, GC9A01A_GREEN);
      tft_1.drawCircle(120, 120, 118, GC9A01A_GREEN);
      tft_1.drawCircle(120, 120, 117, GC9A01A_GREEN);
      break;
    case 2:
      tft_1.setTextColor(GC9A01A_YELLOW);
      tft_1.drawCircle(120, 120, 119, GC9A01A_YELLOW);
      tft_1.drawCircle(120, 120, 118, GC9A01A_YELLOW);
      tft_1.drawCircle(120, 120, 117, GC9A01A_YELLOW);
      break;
    case 3:
      tft_1.setTextColor(GC9A01A_ORANGE);
      tft_1.drawCircle(120, 120, 119, GC9A01A_ORANGE);
      tft_1.drawCircle(120, 120, 118, GC9A01A_ORANGE);
      tft_1.drawCircle(120, 120, 117, GC9A01A_ORANGE);
      break;
    case 4:
      tft_1.setTextColor(GC9A01A_RED);
      tft_1.drawCircle(120, 120, 119, GC9A01A_RED);
      tft_1.drawCircle(120, 120, 118, GC9A01A_RED);
      tft_1.drawCircle(120, 120, 117, GC9A01A_RED);
      break;
    default:
      tft_1.setTextColor(GC9A01A_BLUE);
      tft_1.drawCircle(120, 120, 119, GC9A01A_BLUE);
      tft_1.drawCircle(120, 120, 118, GC9A01A_BLUE);
      tft_1.drawCircle(120, 120, 117, GC9A01A_BLUE);
      break;
  }

  tft_1.println(temp_val);
  prev_cpu_temp_val = temp_val;
}

void show_gpu_temp_val(String temp_val, int text_colour) {
  tft_2.setCursor(59, 36); tft_2.setTextColor(GC9A01A_WHITE);  tft_2.setTextSize(4);  tft_2.println("GPU-T");
  tft_2.setCursor(96, 184); tft_2.setTextColor(GC9A01A_WHITE);  tft_2.setTextSize(4);  tft_2.println("^C");
  tft_2.setCursor(40, 98); tft_2.setTextColor(GC9A01A_BLACK);  tft_2.setTextSize(7);  tft_2.println(prev_gpu_temp_val);
  delay(10);
  tft_2.setCursor(40, 98); tft_2.setTextSize(7);
  switch (text_colour) {
    case 1:
      tft_2.setTextColor(GC9A01A_GREEN);
      tft_2.drawCircle(120, 120, 119, GC9A01A_GREEN);
      tft_2.drawCircle(120, 120, 118, GC9A01A_GREEN);
      tft_2.drawCircle(120, 120, 117, GC9A01A_GREEN);
      break;
    case 2:
      tft_2.setTextColor(GC9A01A_YELLOW);
      tft_2.drawCircle(120, 120, 119, GC9A01A_YELLOW);
      tft_2.drawCircle(120, 120, 118, GC9A01A_YELLOW);
      tft_2.drawCircle(120, 120, 117, GC9A01A_YELLOW);
      break;
    case 3:
      tft_2.setTextColor(GC9A01A_ORANGE);
      tft_2.drawCircle(120, 120, 119, GC9A01A_ORANGE);
      tft_2.drawCircle(120, 120, 118, GC9A01A_ORANGE);
      tft_2.drawCircle(120, 120, 117, GC9A01A_ORANGE);
      break;
    case 4:
      tft_2.setTextColor(GC9A01A_RED);
      tft_2.drawCircle(120, 120, 119, GC9A01A_RED);
      tft_2.drawCircle(120, 120, 118, GC9A01A_RED);
      tft_2.drawCircle(120, 120, 117, GC9A01A_RED);
      break;
    default:
      tft_2.setTextColor(GC9A01A_BLUE);
      tft_2.drawCircle(120, 120, 119, GC9A01A_BLUE);
      tft_2.drawCircle(120, 120, 118, GC9A01A_BLUE);
      tft_2.drawCircle(120, 120, 117, GC9A01A_BLUE);
      break;
  }

  tft_2.println(temp_val);
  prev_gpu_temp_val = temp_val;
}


void testFilledRoundRects() {

  int i, i2, cx = tft_1.width()  / 2 - 1, cy = tft_1.height() / 2 - 1;

  tft_1.fillScreen(GC9A01A_BLACK);
  tft_2.fillScreen(GC9A01A_BLACK);

  for (i = min(tft_1.width(), tft_1.height()); i > 20; i -= 6) {
    i2 = i / 2;
    tft_1.fillRoundRect(cx - i2, cy - i2, i, i, i / 8, tft_1.color565(0, i, 0));
    tft_2.fillRoundRect(cx - i2, cy - i2, i, i, i / 8, tft_2.color565(0, i, 0));
    yield();
  }
}

void begin_serial() {
  /*
    This function sends the response
    in JSON with keys of device
    and message. The value of message
    is a flag on the python side for
    programme control
  */
  StaticJsonDocument<64> jsonDoc;
  jsonDoc["message"] = "hello";
  jsonDoc["device"] = device;
  String jsonString;
  serializeJson(jsonDoc, jsonString);
  Serial.println(jsonString);
  tft_1.fillScreen(GC9A01A_BLACK);
  tft_2.fillScreen(GC9A01A_BLACK);
  delay(1);
}

void respond_serial() {
  /*
    This function sends the response
    in JSON with keys of device
    and message. The value of message
    is a flag on the python side for
    programme control
  */
  StaticJsonDocument<64> jsonDoc;
  jsonDoc["message"] = "done";
  jsonDoc["device"] = device;
  String jsonString;
  serializeJson(jsonDoc, jsonString);
  Serial.println(jsonString);
}

void exit_serial() {
  /*
    This function sends the response
    in JSON with keys of device
    and message. The value of message
    is a flag on the python side for
    programme control
  */
  StaticJsonDocument<64> jsonDoc;
  jsonDoc["message"] = "exit";
  jsonDoc["device"] = device;
  String jsonString;
  serializeJson(jsonDoc, jsonString);
  Serial.println(jsonString);
}
